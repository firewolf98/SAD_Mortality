})
}
# Crea le etichette multilinea
multiline_labels <- create_multiline_labels(frequency_absolute$Variable, width = 20)
# Imposta i margini per dare più spazio alle etichette
par(mar = c(12, 5, 5, 2))  # Maggiore margine inferiore
# Grafico della distribuzione di frequenza assoluta per ogni tipo di morte
barplot(frequency_absolute$Frequency_Absolute,
names.arg = multiline_labels,  # Usa le etichette multilinea
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Tutti i Paesi)",
ylab = "Frequenza Assoluta",
col = "steelblue",
las = 2,  # Ruota le etichette di 90 gradi (verticale)
cex.names = 0.6,  # Dimensione delle etichette
space = 0.5,  # Aggiungi spazio tra le barre
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))  # Aggiungi un po' di spazio in alto
# Aggiungi un mtext per l'etichetta dell'asse x
mtext("Tipo di Morte", side = 1, line = 10)  # Sposta l'etichetta più vicina
# Grafico della distribuzione di frequenza relativa per ogni tipo di morte
barplot(frequency_relative$Frequency_Relative,
names.arg = multiline_labels,  # Usa le etichette multilinea
main = "Distribuzione di Frequenza Relativa per Tipo di Morte (Tutti i Paesi)",
ylab = "Frequenza Relativa",
col = "lightgreen",
las = 2,  # Ruota le etichette di 90 gradi (verticale)
cex.names = 0.6,  # Dimensione delle etichette
space = 0.5,  # Aggiungi spazio tra le barre
ylim = c(0, max(frequency_relative$Frequency_Relative) * 1.1))  # Aggiungi un po' di spazio in alto
# Aggiungi un mtext per l'etichetta dell'asse x
mtext("Tipo di Morte", side = 1, line = 10)  # Sposta l'etichetta più vicina
library(dplyr)
library(readxl)
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping
map_values <- function(value, measure) {
# Utilizziamo case_when per operare su vettori di valori
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
data_infant$Value_transformed = data_infant$Value
# Applica la funzione di mapping al dataframe
mapped_data <- data_infant %>%
mutate(Value_transformed = map_values(Value_transformed, Measure))
# Visualizza i risultati
print(mapped_data)
to_plot <- mapped_data[!is.na(mapped_data$Value_transformed), ]
summary(data_infant)
# Calcolo della distribuzione di frequenza assoluta aggregata per ogni tipo di morte (tutti i paesi assieme)
frequency_absolute <- to_plot %>%
group_by(Variable) %>%  # Raggruppa solo per 'Variable' (tipo di morte)
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Frequency_Absolute)  # Ordina per frequenza crescente
# Calcolo della distribuzione di frequenza relativa per ciascun tipo di morte
frequency_relative <- frequency_absolute %>%
mutate(Frequency_Relative = Frequency_Absolute / sum(Frequency_Absolute))
# Visualizza i dati risultanti
print(frequency_absolute)
print(frequency_relative)
sum(frequency_relative)
frequency_relative
frequency_relative[4]
sum(frequency_relative[4])
library(dplyr)
library(readxl)
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping
map_values <- function(value, measure) {
# Utilizziamo case_when per operare su vettori di valori
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
data_infant$Value_transformed = data_infant$Value
# Applica la funzione di mapping al dataframe
mapped_data <- data_infant %>%
mutate(Value_transformed = map_values(Value_transformed, Measure))
# Visualizza i risultati
print(mapped_data)
to_plot <- mapped_data[!is.na(mapped_data$Value_transformed), ]
summary(data_infant)
# Calcolo della distribuzione di frequenza assoluta aggregata per ogni tipo di morte (tutti i paesi assieme)
frequency_absolute <- to_plot %>%
group_by(Variable) %>%  # Raggruppa solo per 'Variable' (tipo di morte)
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Frequency_Absolute)  # Ordina per frequenza crescente
# Calcolo della distribuzione di frequenza relativa per ciascun tipo di morte
frequency_relative <- frequency_absolute %>%
mutate(Frequency_Relative = Frequency_Absolute / sum(Frequency_Absolute))
# Visualizza i dati risultanti
print(frequency_absolute)
print(frequency_relative)
# Funzione per creare etichette multilinea
create_multiline_labels <- function(labels, width = 20) {
sapply(labels, function(x) {
if (nchar(x) > width) {
return(paste(strwrap(x, width = width), collapse = "\n"))  # Collassa le righe in una stringa
} else {
return(x)
}
})
}
# Crea le etichette multilinea
multiline_labels <- create_multiline_labels(frequency_absolute$Variable, width = 20)
# Imposta i margini per dare più spazio alle etichette
par(mar = c(12, 5, 5, 2))  # Maggiore margine inferiore
# Grafico della distribuzione di frequenza assoluta per ogni tipo di morte
barplot(frequency_absolute$Frequency_Absolute,
names.arg = multiline_labels,  # Usa le etichette multilinea
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Tutti i Paesi)",
ylab = "Frequenza Assoluta",
col = "steelblue",
las = 2,  # Ruota le etichette di 90 gradi (verticale)
cex.names = 0.6,  # Dimensione delle etichette
space = 0.5,  # Aggiungi spazio tra le barre
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))  # Aggiungi un po' di spazio in alto
library(dplyr)
library(readxl)
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping
map_values <- function(value, measure) {
# Utilizziamo case_when per operare su vettori di valori
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
data_infant$Value_transformed = data_infant$Value
# Applica la funzione di mapping al dataframe
mapped_data <- data_infant %>%
mutate(Value_transformed = map_values(Value_transformed, Measure))
# Visualizza i risultati
print(mapped_data)
to_plot <- mapped_data[!is.na(mapped_data$Value_transformed), ]
summary(data_infant)
# Calcolo della distribuzione di frequenza assoluta aggregata per ogni tipo di morte (tutti i paesi assieme)
frequency_absolute <- to_plot %>%
group_by(Variable) %>%  # Raggruppa solo per 'Variable' (tipo di morte)
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Frequency_Absolute)  # Ordina per frequenza crescente
# Calcolo della distribuzione di frequenza relativa per ciascun tipo di morte
frequency_relative <- frequency_absolute %>%
mutate(Frequency_Relative = Frequency_Absolute / sum(Frequency_Absolute))
# Visualizza i dati risultanti
print(frequency_absolute)
print(frequency_relative)
# Funzione per creare etichette multilinea
create_multiline_labels <- function(labels, width = 20) {
sapply(labels, function(x) {
if (nchar(x) > width) {
return(paste(strwrap(x, width = width), collapse = "\n"))  # Collassa le righe in una stringa
} else {
return(x)
}
})
}
# Crea le etichette multilinea
multiline_labels <- create_multiline_labels(frequency_absolute$Variable, width = 20)
# Imposta i margini per dare più spazio alle etichette
par(mar = c(12, 5, 5, 2))  # Maggiore margine inferiore
# Grafico della distribuzione di frequenza assoluta per ogni tipo di morte
barplot(frequency_absolute$Frequency_Absolute,
names.arg = multiline_labels,  # Usa le etichette multilinea
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Tutti i Paesi)",
ylab = "Frequenza Assoluta",
col = "steelblue",
las = 2,  # Ruota le etichette di 90 gradi (verticale)
cex.names = 0.6,  # Dimensione delle etichette
space = 0.5,  # Aggiungi spazio tra le barre
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))  # Aggiungi un po' di spazio in alto
library(dplyr)
library(readxl)
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping
map_values <- function(value, measure) {
# Utilizziamo case_when per operare su vettori di valori
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
data_infant$Value_transformed = data_infant$Value
# Applica la funzione di mapping al dataframe
mapped_data <- data_infant %>%
mutate(Value_transformed = map_values(Value_transformed, Measure))
# Visualizza i risultati
print(mapped_data)
to_plot <- mapped_data[!is.na(mapped_data$Value_transformed), ]
summary(data_infant)
# Calcolo della distribuzione di frequenza assoluta aggregata per ogni tipo di morte (tutti i paesi assieme)
frequency_absolute <- to_plot %>%
group_by(Variable) %>%  # Raggruppa solo per 'Variable' (tipo di morte)
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Frequency_Absolute)  # Ordina per frequenza crescente
# Calcolo della distribuzione di frequenza relativa per ciascun tipo di morte
frequency_relative <- frequency_absolute %>%
mutate(Frequency_Relative = Frequency_Absolute / sum(Frequency_Absolute))
# Visualizza i dati risultanti
print(frequency_absolute)
print(frequency_relative)
# Funzione per creare etichette multilinea
create_multiline_labels <- function(labels, width = 20) {
sapply(labels, function(x) {
if (nchar(x) > width) {
return(paste(strwrap(x, width = width), collapse = "\n"))  # Collassa le righe in una stringa
} else {
return(x)
}
})
}
# Crea le etichette multilinea
multiline_labels <- create_multiline_labels(frequency_absolute$Variable, width = 20)
# Imposta i margini per dare più spazio alle etichette
par(mar = c(8, 5, 5, 2))  # Maggiore margine inferiore
# Grafico della distribuzione di frequenza assoluta per ogni tipo di morte
barplot(frequency_absolute$Frequency_Absolute,
names.arg = multiline_labels,  # Usa le etichette multilinea
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Tutti i Paesi)",
ylab = "Frequenza Assoluta",
col = "steelblue",
las = 2,  # Ruota le etichette di 90 gradi (verticale)
cex.names = 0.6,  # Dimensione delle etichette
space = 0.5,  # Aggiungi spazio tra le barre
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))  # Aggiungi un po' di spazio in alto
# Aggiungi un mtext per l'etichetta dell'asse x
mtext("Tipo di Morte", side = 1, line = 10)  # Sposta l'etichetta più vicina
# Grafico della distribuzione di frequenza relativa per ogni tipo di morte
barplot(frequency_relative$Frequency_Relative,
names.arg = multiline_labels,  # Usa le etichette multilinea
main = "Distribuzione di Frequenza Relativa per Tipo di Morte (Tutti i Paesi)",
ylab = "Frequenza Relativa",
col = "lightgreen",
las = 2,  # Ruota le etichette di 90 gradi (verticale)
cex.names = 0.6,  # Dimensione delle etichette
space = 0.5,  # Aggiungi spazio tra le barre
ylim = c(0, max(frequency_relative$Frequency_Relative) * 1.1))  # Aggiungi un po' di spazio in alto
# Aggiungi un mtext per l'etichetta dell'asse x
mtext("Tipo di Morte", side = 1, line = 10)  # Sposta l'etichetta più vicina
library(dplyr)
library(readxl)
# Caricamento dei dati
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
# Visualizza un sommario dei dati
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping per uniformare i dati
map_values <- function(value, measure) {
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
# Lista dei paesi dell'Unione Europea
eu_countries <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus",
"Czech Republic", "Denmark", "Estonia", "Finland",
"France", "Germany", "Greece", "Hungary", "Ireland",
"Italy", "Latvia", "Lithuania", "Luxembourg", "Malta",
"Netherlands", "Poland", "Portugal", "Romania", "Slovakia",
"Slovenia", "Spain", "Sweden")
# Aggiungi una colonna che identifica se un paese è parte dell'Unione Europea o meno
data_infant <- data_infant %>%
mutate(Region = ifelse(Country %in% eu_countries, "EU", "Non-EU"))
# Applica la funzione di mapping ai dati
data_infant$Value_transformed <- map_values(data_infant$Value, data_infant$Measure)
# Filtra i dati con valori trasformati non nulli
to_plot <- data_infant %>%
filter(!is.na(Value_transformed))
# Calcolo della distribuzione di frequenza assoluta per tipo di morte, separata per regioni (UE e Non-UE)
frequency_absolute <- to_plot %>%
group_by(Region, Kind.of.death) %>%
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Region, Frequency_Absolute)
library(dplyr)
library(readxl)
# Caricamento dei dati
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
# Visualizza un sommario dei dati
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping per uniformare i dati
map_values <- function(value, measure) {
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
# Lista dei paesi dell'Unione Europea
eu_countries <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus",
"Czech Republic", "Denmark", "Estonia", "Finland",
"France", "Germany", "Greece", "Hungary", "Ireland",
"Italy", "Latvia", "Lithuania", "Luxembourg", "Malta",
"Netherlands", "Poland", "Portugal", "Romania", "Slovakia",
"Slovenia", "Spain", "Sweden")
# Aggiungi una colonna che identifica se un paese è parte dell'Unione Europea o meno
data_infant <- data_infant %>%
mutate(Region = ifelse(Country %in% eu_countries, "EU", "Non-EU"))
# Applica la funzione di mapping ai dati
data_infant$Value_transformed <- map_values(data_infant$Value, data_infant$Measure)
# Filtra i dati con valori trasformati non nulli
to_plot <- data_infant %>%
filter(!is.na(Value_transformed))
# Calcolo della distribuzione di frequenza assoluta per tipo di morte, separata per regioni (UE e Non-UE)
frequency_absolute <- to_plot %>%
group_by(Region, Variable) %>%
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Region, Frequency_Absolute)
# Calcolo della distribuzione di frequenza relativa
frequency_relative <- frequency_absolute %>%
group_by(Region) %>%
mutate(Frequency_Relative = Frequency_Absolute / sum(Frequency_Absolute))
# Visualizza i risultati
print(frequency_absolute)
print(frequency_relative)
# Funzione per creare etichette multilinea
create_multiline_labels <- function(labels, width = 20) {
sapply(labels, function(x) {
if (nchar(x) > width) {
return(paste(strwrap(x, width = width), collapse = "\n"))
} else {
return(x)
}
})
}
# Crea etichette multilinea per i grafici
multiline_labels <- create_multiline_labels(frequency_absolute$Variable, width = 20)
# Imposta margini per dare più spazio alle etichette
par(mar = c(12, 5, 5, 2))
# Grafico della distribuzione di frequenza assoluta per i paesi UE
barplot(frequency_absolute$Frequency_Absolute[frequency_absolute$Region == "EU"],
names.arg = multiline_labels[frequency_absolute$Region == "EU"],
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Paesi UE)",
ylab = "Frequenza Assoluta",
col = "steelblue",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))
mtext("Tipo di Morte", side = 1, line = 10)
# Grafico per paesi Non-UE
barplot(frequency_absolute$Frequency_Absolute[frequency_absolute$Region == "Non-EU"],
names.arg = multiline_labels[frequency_absolute$Region == "Non-EU"],
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Paesi Non-UE)",
ylab = "Frequenza Assoluta",
col = "lightblue",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))
mtext("Tipo di Morte", side = 1, line = 10)
# Grafico della distribuzione di frequenza relativa per paesi UE
barplot(frequency_relative$Frequency_Relative[frequency_relative$Region == "EU"],
names.arg = multiline_labels[frequency_relative$Region == "EU"],
main = "Distribuzione di Frequenza Relativa per Tipo di Morte (Paesi UE)",
ylab = "Frequenza Relativa",
col = "lightgreen",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_relative$Frequency_Relative) * 1.1))
# Grafico per paesi Non-UE
barplot(frequency_relative$Frequency_Relative[frequency_relative$Region == "Non-EU"],
names.arg = multiline_labels[frequency_relative$Region == "Non-EU"],
main = "Distribuzione di Frequenza Relativa per Tipo di Morte (Paesi Non-UE)",
ylab = "Frequenza Relativa",
col = "lightcoral",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_relative$Frequency_Relative) * 1.1))
library(dplyr)
library(readxl)
# Caricamento dei dati
data <- read_xlsx("Mortality.xlsx")
names(data)[names(data) == "Variable"] <- "Kind of death"
# Visualizza un sommario dei dati
summary(data)
data_infant <- read_xlsx("Infant_Mortality.xlsx")
# Definizione della funzione di mapping per uniformare i dati
map_values <- function(value, measure) {
mapped_value <- case_when(
measure == "Deaths per 100 000 live births" ~ value * 1000 / 100000,
measure == "Deaths per 1 000 live births" ~ value,
TRUE ~ NA_real_  # Restituiamo NA se nessuna delle condizioni è soddisfatta
)
return(mapped_value)
}
# Lista dei paesi dell'Unione Europea
eu_countries <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus",
"Czech Republic", "Denmark", "Estonia", "Finland",
"France", "Germany", "Greece", "Hungary", "Ireland",
"Italy", "Latvia", "Lithuania", "Luxembourg", "Malta",
"Netherlands", "Poland", "Portugal", "Romania", "Slovakia",
"Slovenia", "Spain", "Sweden")
# Aggiungi una colonna che identifica se un paese è parte dell'Unione Europea o meno
data_infant <- data_infant %>%
mutate(Region = ifelse(Country %in% eu_countries, "EU", "Non-EU"))
# Applica la funzione di mapping ai dati
data_infant$Value_transformed <- map_values(data_infant$Value, data_infant$Measure)
# Filtra i dati con valori trasformati non nulli
to_plot <- data_infant %>%
filter(!is.na(Value_transformed))
# Calcolo della distribuzione di frequenza assoluta per tipo di morte, separata per regioni (UE e Non-UE)
frequency_absolute <- to_plot %>%
group_by(Region, Variable) %>%
summarise(Frequency_Absolute = n(),
Total_Deaths = sum(Value_transformed, na.rm = TRUE),
.groups = 'drop') %>%
arrange(Region, Frequency_Absolute)
# Calcolo della distribuzione di frequenza relativa
frequency_relative <- frequency_absolute %>%
group_by(Region) %>%
mutate(Frequency_Relative = Frequency_Absolute / sum(Frequency_Absolute))
# Visualizza i risultati
print(frequency_absolute)
print(frequency_relative)
# Funzione per creare etichette multilinea
create_multiline_labels <- function(labels, width = 20) {
sapply(labels, function(x) {
if (nchar(x) > width) {
return(paste(strwrap(x, width = width), collapse = "\n"))
} else {
return(x)
}
})
}
# Crea etichette multilinea per i grafici
multiline_labels <- create_multiline_labels(frequency_absolute$Variable, width = 20)
# Imposta margini per dare più spazio alle etichette
par(mar = c(12, 5, 5, 2))
# Grafico della distribuzione di frequenza assoluta per i paesi UE
barplot(frequency_absolute$Frequency_Absolute[frequency_absolute$Region == "EU"],
names.arg = multiline_labels[frequency_absolute$Region == "EU"],
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Paesi UE)",
ylab = "Frequenza Assoluta",
col = "steelblue",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))
mtext("Tipo di Morte", side = 1, line = 10)
# Grafico per paesi Non-UE
barplot(frequency_absolute$Frequency_Absolute[frequency_absolute$Region == "Non-EU"],
names.arg = multiline_labels[frequency_absolute$Region == "Non-EU"],
main = "Distribuzione di Frequenza Assoluta per Tipo di Morte (Paesi Non-UE)",
ylab = "Frequenza Assoluta",
col = "lightblue",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_absolute$Frequency_Absolute) * 1.1))
mtext("Tipo di Morte", side = 1, line = 10)
# Grafico della distribuzione di frequenza relativa per paesi UE
barplot(frequency_relative$Frequency_Relative[frequency_relative$Region == "EU"],
names.arg = multiline_labels[frequency_relative$Region == "EU"],
main = "Distribuzione di Frequenza Relativa per Tipo di Morte (Paesi UE)",
ylab = "Frequenza Relativa",
col = "lightgreen",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_relative$Frequency_Relative) * 1.1))
# Grafico per paesi Non-UE
barplot(frequency_relative$Frequency_Relative[frequency_relative$Region == "Non-EU"],
names.arg = multiline_labels[frequency_relative$Region == "Non-EU"],
main = "Distribuzione di Frequenza Relativa per Tipo di Morte (Paesi Non-UE)",
ylab = "Frequenza Relativa",
col = "lightcoral",
las = 2,
cex.names = 0.6,
space = 0.5,
ylim = c(0, max(frequency_relative$Frequency_Relative) * 1.1))
View(to_plot)
